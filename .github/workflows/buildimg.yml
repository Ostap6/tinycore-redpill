name: Issues
on:
  issues:
    types: [opened, reopened]
    inputs:
      model:
        description: 'model'
        required: true
        default: 'DS3622xs+'
      revision:
        description: 'revision'
        required: true
        default: '7.2.2-72806'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: build tinycore-redpill loader with lastest img
        id: build-loader
        run: |
          sudo apt update
          sudo apt-get install grub2 pciutils qemu-utils cpio kmod ncurses-bin

          sudo mkdir /home/tc
          sudo mkdir /opt/output
          sudo cp -rf ./* /home/tc
          ls -ltr /home/tc
          
          LATESTURL="`curl --connect-timeout 5 -skL -w %{url_effective} -o /dev/null "https://github.com/PeterSuh-Q3/tinycore-redpill/releases/latest"`"
          TAG="${LATESTURL##*/}"
          echo "TAG is ${TAG}"
          curl -kLO# https://github.com/PeterSuh-Q3/tinycore-redpill/releases/download/${TAG}/tinycore-redpill.${TAG}.m-shell.img.gz
          gunzip tinycore-redpill.${TAG}.m-shell.img.gz          
          pwd
          ls -ltr
          echo "::set-output name=TAG::${TAG}"

          path=`pwd`

          LOOPX=$(sudo losetup -f)
          sudo losetup -P ${LOOPX} tinycore-redpill.${TAG}.m-shell.img
          sudo fdisk -l ${LOOPX}

          loaderdisk=$(echo ${LOOPX} | cut -c 6-12 )

          sudo mkdir -p /mnt/${loaderdisk}p1
          sudo mkdir -p /mnt/${loaderdisk}p2
          sudo mkdir -p /mnt/${loaderdisk}p3

          sudo mount ${LOOPX}p1 /mnt/${loaderdisk}p1
          sudo mount ${LOOPX}p2 /mnt/${loaderdisk}p2
          sudo mount ${LOOPX}p3 /mnt/${loaderdisk}p3

          ls -ltr /mnt/${loaderdisk}p1
          ls -ltr /mnt/${loaderdisk}p2
          ls -ltr /mnt/${loaderdisk}p3

          cd /home/tc
          sudo ./functions.sh ${{github.event.inputs.model}}-${{github.event.inputs.revision}} noconfig fri

          ls -ltr /mnt/${loaderdisk}p1
          ls -ltr /mnt/${loaderdisk}p2
          ls -ltr /mnt/${loaderdisk}p3

          #make target img
          cd ${path}/
          dd if=/dev/zero of=tinycore-redpill.${TAG}-${{github.event.inputs.model}}-${{github.event.inputs.revision}}.m-shell.img bs=1M seek=2048 count=0
          echo -e "n\np\n1\n\n+72M\nn\np\n2\n\n+75M\nn\np\n3\n\n+1899M\nw\nq\n" | sudo fdisk tinycore-redpill.${TAG}-${{github.event.inputs.model}}-${{github.event.inputs.revision}}.m-shell.img
          echo -e "a\n1\nw" | sudo fdisk tinycore-redpill.${TAG}-${{github.event.inputs.model}}-${{github.event.inputs.revision}}.m-shell.img

          LOOPZ=$(sudo losetup -f)
          sudo losetup -P ${LOOPZ} tinycore-redpill.${TAG}-${{github.event.inputs.model}}-${{github.event.inputs.revision}}.m-shell.img
          echo "LOOPZ = ${LOOPZ}"
          sudo fdisk -l ${LOOPZ}

          #sudo mkfs.vfat -F16 ${LOOPZ}p1
          #sudo mkfs.vfat -F16 ${LOOPZ}p2
          sudo mkfs.vfat -i 6234C863 -F16 ${LOOPZ}p3
          
          sudo dd if="${LOOPX}p1" of="${LOOPZ}p1"
          sudo mkdir -p /mnt/tarp1
          sudo mount ${LOOPZ}p1 /mnt/tarp1
          sudo grub-install --target=x86_64-efi --boot-directory="/mnt/tarp1/boot" --efi-directory="/mnt/tarp1" --removable
          sudo grub-install --target=i386-pc --boot-directory="/mnt/tarp1/boot" "${LOOPZ}"
          
          sudo dd if="${LOOPX}p2" of="${LOOPZ}p2"
          
          sudo mkdir -p /mnt/tarp3
          sudo mount ${LOOPZ}p3 /mnt/tarp3
          cd /mnt/${loaderdisk}p3 && sudo find . | sudo cpio -pdm "/mnt/tarp3"
          cd ${path}/
          ls -ltr /mnt/tarp3
         
          sudo umount /mnt/tarp3
          
          sudo losetup -d ${LOOPZ}
          sudo umount /mnt/${loaderdisk}p1
          sudo umount /mnt/${loaderdisk}p2
          sudo umount /mnt/${loaderdisk}p3
          sudo losetup -d ${LOOPX}

          cd ${path}/
          ls -ltr ${path}/
          gzip -c tinycore-redpill.${TAG}-${{github.event.inputs.model}}-${{github.event.inputs.revision}}.m-shell.img > /opt/output/tinycore-redpill.${TAG}-${{github.event.inputs.model}}-${{github.event.inputs.revision}}.m-shell.img.gz

          qemu-img convert -f raw -O vmdk tinycore-redpill.${TAG}-${{github.event.inputs.model}}-${{github.event.inputs.revision}}.m-shell.img tinycore-redpill.${TAG}-${{github.event.inputs.model}}-${{github.event.inputs.revision}}.m-shell.vmdk
          gzip -c tinycore-redpill.${TAG}-${{github.event.inputs.model}}-${{github.event.inputs.revision}}.m-shell.vmdk > /opt/output/tinycore-redpill.${TAG}-${{github.event.inputs.model}}-${{github.event.inputs.revision}}.m-shell.vmdk.gz
          
          ls -ltr /opt/output
          
      - name: Upload MshellImage-${{ steps.build-loader.outputs.TAG }}-${{github.event.inputs.model}}-${{github.event.inputs.revision}}
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: MshellImage-${{ steps.build-loader.outputs.TAG }}-${{github.event.inputs.model}}-${{github.event.inputs.revision}}
          path: /opt/output
