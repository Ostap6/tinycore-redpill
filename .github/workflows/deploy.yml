name: release tags

on:
  release:
    types: [published]

  workflow_dispatch:
      
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Bring last uploaded mydata.tgz files from tinycore-redpill & lastest img
        run: |
          curl -kLO# https://github.com/PeterSuh-Q3/tinycore-redpill/releases/download/v1.0.1.0/tinycore-redpill.v1.0.1.0.m-shell.img.gz
          gunzip tinycore-redpill.v1.0.1.0.m-shell.img.gz          
          pwd
          ls -ltr ~
          ls -ltr
      - name: Mount and copy mydata.tgz
        id: cp-mydata-tgz
        run: |
          VERSION=v`cat rploader.sh | grep rploaderver= | cut -d\" -f2`
          echo "Version: ${VERSION}"
          echo "::set-output name=VERSION::${VERSION}"
          mv tinycore-redpill.v1.0.1.0.m-shell.img tinycore-redpill.${VERSION}.m-shell.img
          ls -ltr          
          LOOPX=$(sudo losetup -f)
          sudo losetup -P ${LOOPX} tinycore-redpill.${VERSION}.m-shell.img
          sudo mkdir -p /mnt/p3
          sudo mount ${LOOPX}p3 /mnt/p3
          sudo cp -vf ~/mydata.tgz /mnt/p3
          sudo umount /mnt/p3
          sudo losetup -d ${LOOPX}
          gzip -c tinycore-redpill.${VERSION}.m-shell.img > tinycore-redpill.${VERSION}.m-shell.img.gz
          ls -ltr                    
      - name: Upload MshellImage-${{ steps.updaterootfs.outputs.VERSION }}
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: MshellImage-${{ steps.updaterootfs.outputs.VERSION }}
          path: /
      # Publish a release if is a tag
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ inputs.version }}
          files: |
            ~/tinycore-redpill.*.m-shell.img.gz
          body: |
            ${{ inputs.version }}
